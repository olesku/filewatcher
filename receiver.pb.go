//
//Written by Ole Fredrik Skudsvik <ole.skudsvik@gmail.com> 2021

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: receiver.proto

package main

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BlockMetaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  int64  `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Offset int64  `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	ChkSum string `protobuf:"bytes,3,opt,name=ChkSum,proto3" json:"ChkSum,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *BlockMetaType) Reset() {
	*x = BlockMetaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetaType) ProtoMessage() {}

func (x *BlockMetaType) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetaType.ProtoReflect.Descriptor instead.
func (*BlockMetaType) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{0}
}

func (x *BlockMetaType) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *BlockMetaType) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BlockMetaType) GetChkSum() string {
	if x != nil {
		return x.ChkSum
	}
	return ""
}

func (x *BlockMetaType) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string           `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	BlockSize int64            `protobuf:"varint,2,opt,name=BlockSize,proto3" json:"BlockSize,omitempty"`
	NumBlocks int64            `protobuf:"varint,3,opt,name=NumBlocks,proto3" json:"NumBlocks,omitempty"`
	BlockMeta []*BlockMetaType `protobuf:"bytes,4,rep,name=BlockMeta,proto3" json:"BlockMeta,omitempty"`
	CheckSum  string           `protobuf:"bytes,5,opt,name=CheckSum,proto3" json:"CheckSum,omitempty"`
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{1}
}

func (x *FileResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileResponse) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *FileResponse) GetNumBlocks() int64 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *FileResponse) GetBlockMeta() []*BlockMetaType {
	if x != nil {
		return x.BlockMeta
	}
	return nil
}

func (x *FileResponse) GetCheckSum() string {
	if x != nil {
		return x.CheckSum
	}
	return ""
}

type FileExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *FileExistRequest) Reset() {
	*x = FileExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistRequest) ProtoMessage() {}

func (x *FileExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistRequest.ProtoReflect.Descriptor instead.
func (*FileExistRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{2}
}

func (x *FileExistRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yes bool `protobuf:"varint,1,opt,name=Yes,proto3" json:"Yes,omitempty"`
}

func (x *FileExistResponse) Reset() {
	*x = FileExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExistResponse) ProtoMessage() {}

func (x *FileExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExistResponse.ProtoReflect.Descriptor instead.
func (*FileExistResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{3}
}

func (x *FileExistResponse) GetYes() bool {
	if x != nil {
		return x.Yes
	}
	return false
}

type FileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	BlockSize int64  `protobuf:"varint,2,opt,name=BlockSize,proto3" json:"BlockSize,omitempty"`
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{4}
}

func (x *FileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileRequest) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

type TruncateFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *TruncateFileRequest) Reset() {
	*x = TruncateFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TruncateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TruncateFileRequest) ProtoMessage() {}

func (x *TruncateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TruncateFileRequest.ProtoReflect.Descriptor instead.
func (*TruncateFileRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{5}
}

func (x *TruncateFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TruncateFileRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FileChecksumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checksum string `protobuf:"bytes,1,opt,name=Checksum,proto3" json:"Checksum,omitempty"`
}

func (x *FileChecksumResponse) Reset() {
	*x = FileChecksumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChecksumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChecksumResponse) ProtoMessage() {}

func (x *FileChecksumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChecksumResponse.ProtoReflect.Descriptor instead.
func (*FileChecksumResponse) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{6}
}

func (x *FileChecksumResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type WriteFileBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	Offset   int64  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Data     []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteFileBlockRequest) Reset() {
	*x = WriteFileBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receiver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFileBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileBlockRequest) ProtoMessage() {}

func (x *WriteFileBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_receiver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileBlockRequest.ProtoReflect.Descriptor instead.
func (*WriteFileBlockRequest) Descriptor() ([]byte, []int) {
	return file_receiver_proto_rawDescGZIP(), []int{7}
}

func (x *WriteFileBlockRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *WriteFileBlockRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WriteFileBlockRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WriteFileBlockRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_receiver_proto protoreflect.FileDescriptor

var file_receiver_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x69, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x6b, 0x53, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x6b, 0x53, 0x75, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75,
	0x6d, 0x22, 0x26, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x22, 0x25, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x59, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x59, 0x65, 0x73,
	0x22, 0x3f, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x3d, 0x0a, 0x13, 0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x32, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x22, 0x73, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x90, 0x04, 0x0a, 0x0f, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x54, 0x72, 0x75, 0x6e,
	0x63, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x54, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x75, 0x6e, 0x63,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x11,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_receiver_proto_rawDescOnce sync.Once
	file_receiver_proto_rawDescData = file_receiver_proto_rawDesc
)

func file_receiver_proto_rawDescGZIP() []byte {
	file_receiver_proto_rawDescOnce.Do(func() {
		file_receiver_proto_rawDescData = protoimpl.X.CompressGZIP(file_receiver_proto_rawDescData)
	})
	return file_receiver_proto_rawDescData
}

var file_receiver_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_receiver_proto_goTypes = []interface{}{
	(*BlockMetaType)(nil),         // 0: main.BlockMetaType
	(*FileResponse)(nil),          // 1: main.FileResponse
	(*FileExistRequest)(nil),      // 2: main.FileExistRequest
	(*FileExistResponse)(nil),     // 3: main.FileExistResponse
	(*FileRequest)(nil),           // 4: main.FileRequest
	(*TruncateFileRequest)(nil),   // 5: main.TruncateFileRequest
	(*FileChecksumResponse)(nil),  // 6: main.FileChecksumResponse
	(*WriteFileBlockRequest)(nil), // 7: main.WriteFileBlockRequest
}
var file_receiver_proto_depIdxs = []int32{
	0, // 0: main.FileResponse.BlockMeta:type_name -> main.BlockMetaType
	2, // 1: main.ReceiverService.CheckFileExist:input_type -> main.FileExistRequest
	4, // 2: main.ReceiverService.GetFileChecksum:input_type -> main.FileRequest
	4, // 3: main.ReceiverService.GetFileMeta:input_type -> main.FileRequest
	7, // 4: main.ReceiverService.WriteFileBlock:input_type -> main.WriteFileBlockRequest
	5, // 5: main.ReceiverService.TruncateFile:input_type -> main.TruncateFileRequest
	4, // 6: main.ReceiverService.DeleteFile:input_type -> main.FileRequest
	4, // 7: main.ReceiverService.CreateDirectory:input_type -> main.FileRequest
	4, // 8: main.ReceiverService.DeleteDirectory:input_type -> main.FileRequest
	3, // 9: main.ReceiverService.CheckFileExist:output_type -> main.FileExistResponse
	6, // 10: main.ReceiverService.GetFileChecksum:output_type -> main.FileChecksumResponse
	1, // 11: main.ReceiverService.GetFileMeta:output_type -> main.FileResponse
	3, // 12: main.ReceiverService.WriteFileBlock:output_type -> main.FileExistResponse
	5, // 13: main.ReceiverService.TruncateFile:output_type -> main.TruncateFileRequest
	4, // 14: main.ReceiverService.DeleteFile:output_type -> main.FileRequest
	4, // 15: main.ReceiverService.CreateDirectory:output_type -> main.FileRequest
	4, // 16: main.ReceiverService.DeleteDirectory:output_type -> main.FileRequest
	9, // [9:17] is the sub-list for method output_type
	1, // [1:9] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_receiver_proto_init() }
func file_receiver_proto_init() {
	if File_receiver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_receiver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TruncateFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChecksumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_receiver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteFileBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_receiver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_receiver_proto_goTypes,
		DependencyIndexes: file_receiver_proto_depIdxs,
		MessageInfos:      file_receiver_proto_msgTypes,
	}.Build()
	File_receiver_proto = out.File
	file_receiver_proto_rawDesc = nil
	file_receiver_proto_goTypes = nil
	file_receiver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReceiverServiceClient is the client API for ReceiverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReceiverServiceClient interface {
	CheckFileExist(ctx context.Context, in *FileExistRequest, opts ...grpc.CallOption) (*FileExistResponse, error)
	GetFileChecksum(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileChecksumResponse, error)
	GetFileMeta(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileResponse, error)
	WriteFileBlock(ctx context.Context, in *WriteFileBlockRequest, opts ...grpc.CallOption) (*FileExistResponse, error)
	TruncateFile(ctx context.Context, in *TruncateFileRequest, opts ...grpc.CallOption) (*TruncateFileRequest, error)
	DeleteFile(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error)
	CreateDirectory(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error)
	DeleteDirectory(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error)
}

type receiverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReceiverServiceClient(cc grpc.ClientConnInterface) ReceiverServiceClient {
	return &receiverServiceClient{cc}
}

func (c *receiverServiceClient) CheckFileExist(ctx context.Context, in *FileExistRequest, opts ...grpc.CallOption) (*FileExistResponse, error) {
	out := new(FileExistResponse)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/CheckFileExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) GetFileChecksum(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileChecksumResponse, error) {
	out := new(FileChecksumResponse)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/GetFileChecksum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) GetFileMeta(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileResponse, error) {
	out := new(FileResponse)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/GetFileMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) WriteFileBlock(ctx context.Context, in *WriteFileBlockRequest, opts ...grpc.CallOption) (*FileExistResponse, error) {
	out := new(FileExistResponse)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/WriteFileBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) TruncateFile(ctx context.Context, in *TruncateFileRequest, opts ...grpc.CallOption) (*TruncateFileRequest, error) {
	out := new(TruncateFileRequest)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/TruncateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) DeleteFile(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error) {
	out := new(FileRequest)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/DeleteFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) CreateDirectory(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error) {
	out := new(FileRequest)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/CreateDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *receiverServiceClient) DeleteDirectory(ctx context.Context, in *FileRequest, opts ...grpc.CallOption) (*FileRequest, error) {
	out := new(FileRequest)
	err := c.cc.Invoke(ctx, "/main.ReceiverService/DeleteDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReceiverServiceServer is the server API for ReceiverService service.
type ReceiverServiceServer interface {
	CheckFileExist(context.Context, *FileExistRequest) (*FileExistResponse, error)
	GetFileChecksum(context.Context, *FileRequest) (*FileChecksumResponse, error)
	GetFileMeta(context.Context, *FileRequest) (*FileResponse, error)
	WriteFileBlock(context.Context, *WriteFileBlockRequest) (*FileExistResponse, error)
	TruncateFile(context.Context, *TruncateFileRequest) (*TruncateFileRequest, error)
	DeleteFile(context.Context, *FileRequest) (*FileRequest, error)
	CreateDirectory(context.Context, *FileRequest) (*FileRequest, error)
	DeleteDirectory(context.Context, *FileRequest) (*FileRequest, error)
}

// UnimplementedReceiverServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReceiverServiceServer struct {
}

func (*UnimplementedReceiverServiceServer) CheckFileExist(context.Context, *FileExistRequest) (*FileExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckFileExist not implemented")
}
func (*UnimplementedReceiverServiceServer) GetFileChecksum(context.Context, *FileRequest) (*FileChecksumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileChecksum not implemented")
}
func (*UnimplementedReceiverServiceServer) GetFileMeta(context.Context, *FileRequest) (*FileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileMeta not implemented")
}
func (*UnimplementedReceiverServiceServer) WriteFileBlock(context.Context, *WriteFileBlockRequest) (*FileExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteFileBlock not implemented")
}
func (*UnimplementedReceiverServiceServer) TruncateFile(context.Context, *TruncateFileRequest) (*TruncateFileRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TruncateFile not implemented")
}
func (*UnimplementedReceiverServiceServer) DeleteFile(context.Context, *FileRequest) (*FileRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFile not implemented")
}
func (*UnimplementedReceiverServiceServer) CreateDirectory(context.Context, *FileRequest) (*FileRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDirectory not implemented")
}
func (*UnimplementedReceiverServiceServer) DeleteDirectory(context.Context, *FileRequest) (*FileRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDirectory not implemented")
}

func RegisterReceiverServiceServer(s *grpc.Server, srv ReceiverServiceServer) {
	s.RegisterService(&_ReceiverService_serviceDesc, srv)
}

func _ReceiverService_CheckFileExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileExistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).CheckFileExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/CheckFileExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).CheckFileExist(ctx, req.(*FileExistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_GetFileChecksum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).GetFileChecksum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/GetFileChecksum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).GetFileChecksum(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_GetFileMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).GetFileMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/GetFileMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).GetFileMeta(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_WriteFileBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteFileBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).WriteFileBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/WriteFileBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).WriteFileBlock(ctx, req.(*WriteFileBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_TruncateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TruncateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).TruncateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/TruncateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).TruncateFile(ctx, req.(*TruncateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_DeleteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).DeleteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/DeleteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).DeleteFile(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_CreateDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).CreateDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/CreateDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).CreateDirectory(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReceiverService_DeleteDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServiceServer).DeleteDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.ReceiverService/DeleteDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServiceServer).DeleteDirectory(ctx, req.(*FileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReceiverService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.ReceiverService",
	HandlerType: (*ReceiverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckFileExist",
			Handler:    _ReceiverService_CheckFileExist_Handler,
		},
		{
			MethodName: "GetFileChecksum",
			Handler:    _ReceiverService_GetFileChecksum_Handler,
		},
		{
			MethodName: "GetFileMeta",
			Handler:    _ReceiverService_GetFileMeta_Handler,
		},
		{
			MethodName: "WriteFileBlock",
			Handler:    _ReceiverService_WriteFileBlock_Handler,
		},
		{
			MethodName: "TruncateFile",
			Handler:    _ReceiverService_TruncateFile_Handler,
		},
		{
			MethodName: "DeleteFile",
			Handler:    _ReceiverService_DeleteFile_Handler,
		},
		{
			MethodName: "CreateDirectory",
			Handler:    _ReceiverService_CreateDirectory_Handler,
		},
		{
			MethodName: "DeleteDirectory",
			Handler:    _ReceiverService_DeleteDirectory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "receiver.proto",
}
